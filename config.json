{
  "testURL": "http://localhost:1317",
  "chain_id": "test",
  "prefix": "cosmos",
  "IDSeparator": ".",
  "FirstOrderCompositeIDSeparator": "|",
  "SecondOrderCompositeIDSeparator": "*",
  "testAccountAddress": "cosmos1pkkayn066msg6kn33wnl5srhdt3tnu2vzasz9c",
  "nubID": "nubID",
  "keysAdd": "/keys/add",
  "keysRecover": "/keys/add",
  "signTx": "/signTx",
  "broadcastTx": "/txs",
  "getAccount": "/auth/accounts/",
  "nubType": "/xprt/identities/github.com/persistenceOne/persistenceSDK/modules/identities/internal/transactions/nub/transactionRequest",
  "nubPath": "/identities/nub",
  "provisionKeyType": "/xprt/identities/github.com/persistenceOne/persistenceSDK/modules/identities/internal/transactions/provision/transactionRequest",
  "provisionKeyPath": "/identities/provision",
  "unprovisionKeyType": "/xprt/identities/github.com/persistenceOne/persistenceSDK/modules/identities/internal/transactions/unprovision/transactionRequest",
  "unprovisionKeyPath": "/identities/unprovision",
  "defineIdentityType": "/xprt/identities/github.com/persistenceOne/persistenceSDK/modules/identities/internal/transactions/define/transactionRequest",
  "defineIdentityPath": "/identities/define",
  "issueIdentityType": "/xprt/identities/github.com/persistenceOne/persistenceSDK/modules/identities/internal/transactions/issue/transactionRequest",
  "issueIdentityPath": "/identities/issue",
  "defineAssetType": "/xprt/assets/github.com/persistenceOne/persistenceSDK/modules/assets/internal/transactions/define/transactionRequest",
  "defineAssetPath": "/assets/define",
  "mintAssetType": "/xprt/assets/github.com/persistenceOne/persistenceSDK/modules/assets/internal/transactions/mint/transactionRequest",
  "mintAssetPath": "/assets/mint",
  "mutateAssetType": "/xprt/assets/github.com/persistenceOne/persistenceSDK/modules/assets/internal/transactions/mutate/transactionRequest",
  "mutateAssetPath": "/assets/mutate",
  "burnAssetType": "/xprt/assets/github.com/persistenceOne/persistenceSDK/modules/assets/internal/transactions/burn/transactionRequest",
  "burnAssetPath": "/assets/burn",
  "metaRevealType": "/xprt/metas/github.com/persistenceOne/persistenceSDK/modules/metas/internal/transactions/reveal/transactionRequest",
  "metaRevealPath": "/metas/reveal",
  "sendSplitType": "/xprt/splits/github.com/persistenceOne/persistenceSDK/modules/splits/internal/transactions/send/transactionRequest",
  "sendSplitPath": "/splits/send",
  "unwrapCoinType": "/xprt/splits/github.com/persistenceOne/persistenceSDK/modules/splits/internal/transactions/unwrap/transactionRequest",
  "unwrapCoinPath": "/splits/unwrap",
  "wrapCoinType": "/xprt/splits/github.com/persistenceOne/persistenceSDK/modules/splits/internal/transactions/wrap/transactionRequest",
  "wrapCoinPath": "/splits/wrap",
  "defineOrderType": "/xprt/orders/github.com/persistenceOne/persistenceSDK/modules/orders/internal/transactions/define/transactionRequest",
  "defineOrderPath": "/orders/define",
  "makeOrderType": "/xprt/orders/github.com/persistenceOne/persistenceSDK/modules/orders/internal/transactions/make/transactionRequest",
  "makeOrderPath": "/orders/make",
  "takeOrderType": "/xprt/orders/github.com/persistenceOne/persistenceSDK/modules/orders/internal/transactions/take/transactionRequest",
  "takeOrderPath": "/orders/take",
  "cancelOrderType": "/xprt/orders/github.com/persistenceOne/persistenceSDK/modules/orders/internal/transactions/cancel/transactionRequest",
  "cancelOrderPath": "/orders/cancel",
  "deputizeType": "/xprt/maintainers/github.com/persistenceOne/persistenceSDK/modules/maintainers/internal/transactions/deputize/transactionRequest",
  "deputizePath": "/maintainers/deputize",
  "queryClassificationPath": "/classifications/classifications/-",
  "queryIdentityPath": "/identities/identities/_",
  "queryAssetPath": "/assets/assets/-",
  "queryOrderPath": "/orders/orders/_",
  "queryIdentityWithID": "/identities/identities/",
  "queryAssetWithID": "/assets/assets/",
  "queryOrderWithID": "/orders/orders/",
  "queryClsWithID": "/classifications/classifications/",
  "querySplitWithID": "/splits/splits/",
  "queryMetaWithID": "/metas/metas/",
  "queryMaintainerWithID": "/maintainers/maintainers/",
  "queryTx": "/txs/",
  "msgSend": "cosmos-sdk/MsgSend"
}
